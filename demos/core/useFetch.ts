export default [
  {
    "name": "demo.vue",
    "scriptContent": "\nimport { computed, reactive, ref } from 'vue'\nimport { stringify } from '@vueuse/docs-utils'\nimport { useToggle } from '@vueuse/shared'\nimport { useFetch } from '@vueuse/core'\n\nconst url = ref('https://httpbin.org/get')\nconst refetch = ref(false)\n\nconst toggleRefetch = useToggle(refetch)\n\nconst {\n  data,\n  error,\n  abort,\n  statusCode,\n  isFetching,\n  isFinished,\n  canAbort,\n  execute,\n} = useFetch(url, { refetch }).get()\n\nconst text = stringify(reactive({\n  isFinished,\n  isFetching,\n  canAbort,\n  statusCode,\n  error,\n  data: computed(() => {\n    try {\n      return JSON.parse(data.value as string)\n    }\n    catch (e) {\n      return null\n    }\n  }),\n}))\n",
    "templateContent": "\n  <div>\n    <div>\n      <note>The following URLs can be used to test different features of useFetch</note>\n      <div class=\"mt-2\">\n        Normal Request:\n        <code>\n          https://httpbin.org/get\n        </code>\n      </div>\n      <div>\n        Abort Request:\n        <code>\n          https://httpbin.org/delay/10\n        </code>\n      </div>\n      <div>\n        Response Error:\n        <code>\n          http://httpbin.org/status/500\n        </code>\n      </div>\n    </div>\n\n    <input v-model=\"url\" type=\"text\">\n    <button @click=\"execute\">\n      Execute\n    </button>\n    <button @click=\"toggleRefetch\">\n      <i v-if=\"refetch\" inline-block align-middle i-carbon-checkmark />\n      <i v-else inline-block align-middle i-carbon-error />\n\n      <span class=\"ml-2\">{{ refetch ? 'Refetch On': 'Refetch Off' }}</span>\n    </button>\n    <button v-if=\"canAbort\" class=\"orange\" @click=\"abort\">\n      Abort\n    </button>\n    <pre class=\"code-block\">{{ text }}</pre>\n  </div>\n",
    "path": "packages/core/useFetch/demo.vue"
  }
]

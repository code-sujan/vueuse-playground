export default [
  {
    "filename": "demo.vue",
    "script": "import { ref } from 'vue'\nimport { isClient } from '@vueuse/shared'\nimport { useDraggable } from '@vueuse/core'\nimport { UseDraggable as Draggable } from './component'\n\nconst el = ref<HTMLElement | null>(null)\n\nconst innerWidth = isClient ? window.innerWidth : 200\n\nconst { x, y, style } = useDraggable(el, {\n  initialValue: { x: innerWidth / 4.2, y: 80 },\n  preventDefault: true,\n})",
    "template": "<div class=\"h-30\">\n    <div\n      ref=\"el\"\n      p=\"x-4 y-2\"\n      border=\"~ gray-400 rounded\"\n      shadow=\"~ hover:lg\"\n      class=\"fixed bg-$vt-c-bg select-none cursor-move z-10\"\n      style=\"touch-action:none;\"\n      :style=\"style\"\n    >\n      ðŸ‘‹ Drag me!\n      <div class=\"text-sm opacity-50\">\n        I am at {{ Math.round(x) }}, {{ Math.round(y) }}\n      </div>\n    </div>\n\n    <Draggable\n      v-slot=\"{ x, y }\"\n      p=\"x-4 y-2\"\n      border=\"~ gray-400 rounded\"\n      shadow=\"~ hover:lg\"\n      class=\"fixed bg-$vt-c-bg select-none cursor-move z-10\"\n      :initial-value=\"{ x: innerWidth / 3.9, y: 150 }\"\n      :prevent-default=\"true\"\n      storage-key=\"vueuse-draggable-pos\"\n      storage-type=\"session\"\n    >\n      Renderless component\n      <div class=\"text-xs opacity-50\">\n        Position persisted in sessionStorage\n      </div>\n      <div class=\"text-sm opacity-50\">\n        {{ Math.round(x) }}, {{ Math.round(y) }}\n      </div>\n    </Draggable>\n  </div>"
  },
  {
    "filename": "component.ts",
    "script": "import { defineComponent, h, reactive, ref, unref } from 'vue-demi'\nimport type { UseDraggableOptions } from '@vueuse/core'\nimport { isClient, useDraggable, useStorage } from '@vueuse/core'\nimport type { RenderableComponent } from './types'\n\nexport interface UseDraggableProps extends UseDraggableOptions, RenderableComponent {\n  /**\n   * When provided, use `useStorage` to preserve element's position\n   */\n  storageKey?: string\n\n  /**\n   * Storage type\n   *\n   * @default 'local'\n   */\n  storageType?: 'local' | 'session'\n}\n\nexport const UseDraggable = defineComponent<UseDraggableProps>({\n  name: 'UseDraggable',\n  props: [\n    'storageKey',\n    'storageType',\n    'initialValue',\n    'exact',\n    'preventDefault',\n    'pointerTypes',\n    'as',\n  ] as unknown as undefined,\n  setup(props, { slots }) {\n    const target = ref()\n    const initialValue = props.storageKey\n      ? useStorage(\n        props.storageKey,\n        unref(props.initialValue) || { x: 0, y: 0 },\n        isClient\n          ? props.storageType === 'session'\n            ? sessionStorage\n            : localStorage\n          : undefined,\n      )\n      : props.initialValue || { x: 0, y: 0 }\n\n    const data = reactive(useDraggable(target, {\n      ...props,\n      initialValue,\n    }))\n\n    return () => {\n      if (slots.default)\n        return h(props.as || 'div', { ref: target, style: `touch-action:none;${data.style}` }, slots.default(data))\n    }\n  },\n})"
  },
  {
    "filename": "types.ts",
    "script": "export * from './_configurable'\n\n// common types\n\nexport interface Position {\n  x: number\n  y: number\n}\n\nexport interface RenderableComponent {\n  /**\n   * The element that the component should be rendered as\n   *\n   * @default 'div'\n   */\n  as?: Object | string\n}\n\nexport type PointerType = 'mouse' | 'touch' | 'pen'"
  },
  {
    "filename": "_configurable.ts",
    "script": "import { isClient } from '@vueuse/shared'\n\nexport interface ConfigurableWindow {\n  /*\n   * Specify a custom `window` instance, e.g. working with iframes or in testing environments.\n   */\n  window?: Window\n}\n\nexport interface ConfigurableDocument {\n  /*\n   * Specify a custom `document` instance, e.g. working with iframes or in testing environments.\n   */\n  document?: Document\n}\n\nexport interface ConfigurableNavigator {\n  /*\n   * Specify a custom `navigator` instance, e.g. working with iframes or in testing environments.\n   */\n  navigator?: Navigator\n}\n\nexport interface ConfigurableLocation {\n  /*\n   * Specify a custom `location` instance, e.g. working with iframes or in testing environments.\n   */\n  location?: Location\n}\n\nexport const defaultWindow = /* #__PURE__ */ isClient ? window : undefined\nexport const defaultDocument = /* #__PURE__ */ isClient ? window.document : undefined\nexport const defaultNavigator = /* #__PURE__ */ isClient ? window.navigator : undefined\nexport const defaultLocation = /* #__PURE__ */ isClient ? window.location : undefined"
  }
]

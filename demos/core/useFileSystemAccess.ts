export default [
  {
    "filename": "demo.vue",
    "script": "import { stringify } from './utils'\nimport type { Ref } from 'vue'\nimport { reactive, ref } from 'vue'\nimport { useFileSystemAccess } from '@vueuse/core'\n\nconst dataType = ref('Text') as Ref<'Text' | 'ArrayBuffer' | 'Blob'>\nconst res = useFileSystemAccess({\n  dataType,\n  types: [{\n    description: 'text',\n    accept: {\n      'text/plain': ['.txt', '.html'],\n    },\n  }],\n  excludeAcceptAllOption: true,\n})\n\nconst content = res.data\nconst str = stringify(reactive({\n  isSupported: res.isSupported,\n  file: res.file,\n  fileName: res.fileName,\n  fileMIME: res.fileMIME,\n  fileSize: res.fileSize,\n  fileLastModified: res.fileLastModified,\n}))\n\nasync function onSave() {\n  await res.save()\n}",
    "template": "<div>\n    <div flex=\"~ gap-1\" items-center>\n      <button @click=\"res.open()\">\n        Open\n      </button>\n      <button @click=\"res.create()\">\n        New file\n      </button>\n      <button :disabled=\"!res.file.value\" @click=\"onSave\">\n        Save\n      </button>\n      <button :disabled=\"!res.file.value\" @click=\"res.saveAs()\">\n        Save as\n      </button>\n\n      <div ml5>\n        <div text-xs op50>\n          DataType\n        </div>\n        <select v-model=\"dataType\" class=\"outline-none w-30 px2 py1 text-sm\" border=\"~ main rounded\">\n          <option value=\"Text\">\n            Text\n          </option>\n          <option value=\"ArrayBuffer\">\n            ArrayBuffer\n          </option>\n          <option value=\"Blob\">\n            Blob\n          </option>\n        </select>\n      </div>\n    </div>\n\n    <pre class=\"code-block\" lang=\"yaml\">{{ str }}</pre>\n\n    <div v-if=\"content\">\n      Content\n      <textarea\n        v-if=\"typeof content === 'string'\"\n        v-model=\"content\" rows=\"20\" cols=\"40\" w-full\n      />\n      <span v-else>{{ content }}</span>\n    </div>\n  </div>"
  }
]

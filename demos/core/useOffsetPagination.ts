export default [
  {
    "filename": "demo.vue",
    "script": "import type { Ref } from 'vue'\nimport { ref } from 'vue'\nimport { useOffsetPagination } from '@vueuse/core'\n\ninterface User {\n  id: number\n  name: string\n}\nconst database = ref([]) as Ref<User[]>\n\nfor (let i = 0; i < 80; i++)\n  database.value.push({ id: i, name: `user ${i}` })\n\nfunction fetch(page: number, pageSize: number) {\n  return new Promise<User[]>((resolve, reject) => {\n    const start = (page - 1) * pageSize\n    const end = start + pageSize\n    setTimeout(() => {\n      resolve(database.value.slice(start, end))\n    }, 100)\n  })\n}\n\nconst data: Ref<User[]> = ref([])\n\nconst page = ref(1)\nconst pageSize = ref(10)\n\nfetchData({\n  currentPage: page.value,\n  currentPageSize: pageSize.value,\n})\n\nfunction fetchData({ currentPage, currentPageSize }: { currentPage: number; currentPageSize: number }) {\n  fetch(currentPage, currentPageSize).then((responseData) => {\n    data.value = responseData\n  })\n}\n\nconst {\n  currentPage,\n  currentPageSize,\n  pageCount,\n  isFirstPage,\n  isLastPage,\n  prev,\n  next,\n} = useOffsetPagination({\n  total: database.value.length,\n  page: 1,\n  pageSize,\n  onPageChange: fetchData,\n  onPageSizeChange: fetchData,\n})",
    "template": "<div class=\"gap-x-4 gap-y-2 grid-cols-2 inline-grid items-center\">\n    <div opacity=\"50\">\n      total:\n    </div>\n    <div>{{ database.length }}</div>\n    <div opacity=\"50\">\n      pageCount:\n    </div>\n    <div>{{ pageCount }}</div>\n    <div opacity=\"50\">\n      currentPageSize:\n    </div>\n    <div>{{ currentPageSize }}</div>\n    <div opacity=\"50\">\n      currentPage:\n    </div>\n    <div>{{ currentPage }}</div>\n    <div opacity=\"50\">\n      isFirstPage:\n    </div>\n    <div>{{ isFirstPage }}</div>\n    <div opacity=\"50\">\n      isLastPage:\n    </div>\n    <div>{{ isLastPage }}</div>\n  </div>\n  <div class=\"my-4\">\n    <button :disabled=\"isFirstPage\" @click=\"prev\">\n      prev\n    </button>\n    <button\n      v-for=\"item in pageCount\"\n      :key=\"item\"\n      :disabled=\"currentPage === item\"\n      @click=\"currentPage = item\"\n    >\n      {{ item }}\n    </button>\n    <button :disabled=\"isLastPage\" @click=\"next\">\n      next\n    </button>\n  </div>\n\n  <table>\n    <thead>\n      <tr>\n        <td>id</td>\n        <td>name</td>\n      </tr>\n    </thead>\n    <tr v-for=\"d in data\" :key=\"d.id\">\n      <td>{{ d.id }}</td>\n      <td>{{ d.name }}</td>\n    </tr>\n  </table>"
  }
]
